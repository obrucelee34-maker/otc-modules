SpellIcon < UIWidget
  size: 24 24
  image-size: 24 24
  focusable: false
  border: 1 #a59977

  $!first:
    margin-right: 2
  $first:
    margin-left: -1

AbilityBarSlot < Panel
  size: 50 50

  UIWidget
    id: charges
    anchors.verticalCenter: parent.top
    anchors.horizontalCenter: parent.horizontalCenter
    image-source: /images/ui/windows/ability_bar/spell_charge_background
    size: 21 30
    font: poppins-14
    text-color: #36F991
    visible: false
    text-align: top
    margin-bottom: 3

  AbilityBarIcon
    id: icon
    anchors.centerIn: parent
    image-offset: 1 0

  SpellProgressRect
    id: progressRect
    anchors.fill: parent
    show-text: true
    visible: false
    phantom: true
    padding: 2
    margin-top: 1
    font: poppins-semibold-bordered-16

  AbilityBarClickResponse
    anchors.centerIn: parent

WeaponSkillBarSlot < Panel
  size: 64 64

  AbilityBarIcon
    size: 64 64
    image-size: 64 64
    id: icon
    anchors.centerIn: parent

  SpellProgressRect
    id: progressRect
    anchors.fill: parent
    show-text: true
    visible: false
    phantom: true
    padding: 2
    margin-top: 1
    font: poppins-semibold-bordered-16

  AbilityBarClickResponse
    anchors.centerIn: parent

MountSkillBarSlot < Panel
  size: 47 47

  AbilityBarIcon
    size: 47 47
    image-size: 47 47
    anchors.centerIn: parent
    image-source: /images/ui/windows/ability_bar/slot_empty

  UICreature
    id: icon
    clipping: true
    size: 37 37
    anchors.left: parent.left
    anchors.top: parent.top
    margin-left: 8
    margin-top: 8
    outfit-scale: 1.0
    outfit-offset: 4 31
    outfit-direction: 1

  SpellProgressRect
    id: progressRect
    anchors.fill: parent
    show-text: true
    visible: false
    phantom: true
    padding: 2
    margin-top: 1
    font: poppins-semibold-bordered-16

  AbilityBarClickResponse
    anchors.centerIn: parent

AbilityBarSlotVertical < Panel
  size: 50 50

  UIWidget
    id: charges
    anchors.verticalCenter: parent.verticalCenter
    anchors.horizontalCenter: parent.left
    image-source: /images/ui/windows/ability_bar/spell_charge_background
    size: 30 21
    font: poppins-14
    text-color: #36F991
    visible: false
    text-align: left
    margin-right: 3
    text-offset: 6 0

  AbilityBarIcon
    id: icon
    anchors.centerIn: parent
    image-offset: 1 0

  SpellProgressRect
    id: progressRect
    anchors.fill: parent
    show-text: true
    visible: false
    phantom: true
    padding: 2
    margin-top: 1
    font: poppins-semibold-bordered-16

  AbilityBarClickResponse
    anchors.centerIn: parent

AbilityBarClickResponse < UIWidget
  id: clickResponse
  image-source: /images/ui/windows/ability_bar/slot_click_response
  size: 46 46
  image-size: 46 46
  visible: true
  opacity: 0
  phantom: true
  @onSetup: |
    if self:getParent() and self:getParent().icon then
      self:setSize(self:getParent().icon:getSize())
      self:setImageSize(self:getParent().icon:getImageSize())
    end

AbilityBarIcon < SpellIcon
  size: 46 46
  border: 0 black
  image-size: 46 46
  image-color: white
  visible: true
  phantom: false
  draggable: true
  on: true
  $!on:
    image-color: #898989

AbilityBarSlotOverlayShortcut < UIWidget
  id: shortcut
  anchors.bottom: parent.bottom
  anchors.horizontalCenter: parent.horizontalCenter
  size: 23 23
  padding: 1 5 1 5
  text-offset: 0 5
  text-auto-resize: true
  text-min-size: 23 23
  font: poppins-12
  @onSetup: |
    addEvent(function()
      local hotkeyCombo = self.hotkeyId and GameHotkeyManager:getHotkeyMainKeyCombo(self.hotkeyId) or ''
      if hotkeyCombo ~= '' then
        self:setText(hotkeyCombo)
      end
    end)

    self:bindDisconnects(connect(GameHotkeyManager, {
      onHotkeyUpdate = function(hotkeyId, hotkeyCombo)
        if not self.hotkeyId or self.hotkeyId <= 0 then
          return
        end

        if hotkeyId ~= self.hotkeyId then
          if hotkeyId <= 0 then
            return
          end
          
          hotkeyCombo = GameHotkeyManager:getHotkeyMainKeyCombo(self.hotkeyId)
        end

        self:setText(hotkeyCombo or '')
      end
    }))


AbilityBarSlotOverlay < Panel
  anchors.top: prev.top
  anchors.left: prev.left
  anchors.right: prev.right
  anchors.bottom: parent.bottom
  @onStateChange: |
    self.border:setOn(self:isOn())
  @onCheckChange: |
    self.border:setChecked(self:isChecked())

  UIWidget
    id: border
    image-size: 50 50
    anchors.top: parent.top
    anchors.horizontalCenter: parent.horizontalCenter
    phantom: true
    $!on:
      image-source: /images/ui/windows/ability_bar/slot_empty
    $on:
      image-source: /images/ui/windows/ability_bar/slot_occupied

  Panel
    id: overlayGlow
    size: 50 50
    image-size: 50 50
    anchors.top: parent.top
    anchors.horizontalCenter: parent.horizontalCenter
    image-source: /images/ui/bars/overlayani
    image-color: #e169f1
    visible: false

  Panel
    id: overlayQueued
    size: 50 50
    image-size: 50 50
    anchors.top: parent.top
    anchors.horizontalCenter: parent.horizontalCenter
    image-source: /images/ui/windows/ability_bar/overlay_queued
    image-color: #FFAA00
    visible: false

  UIWidget
    id: itemCount
    anchors.horizontalCenter: parent.horizontalCenter
    anchors.verticalCenter: parent.verticalCenter
    margin-top: 3
    font: poppins-semibold-bordered-12
    text-auto-resize: true
    phantom: true

  Panel
    id: labelBackground
    anchors.fill: next
    image-source: /images/ui/windows/ability_bar/skill_hotkey_backgorund
    image-border: 4

  AbilityBarSlotOverlayShortcut
    margin-bottom: 4

AbilityBarSlotOverlayVertical < Panel
  anchors.top: prev.top
  anchors.left: prev.left
  anchors.right: prev.right
  height: 65
  @onStateChange: |
    self.border:setOn(self:isOn())
  @onCheckChange: |
    self.border:setChecked(self:isChecked())

  UIWidget
    id: border
    image-size: 50 50
    anchors.top: parent.top
    anchors.horizontalCenter: parent.horizontalCenter
    phantom: true
    $!on !checked:
      image-source: /images/ui/windows/ability_bar/slot_empty
    $on !checked:
      image-source: /images/ui/windows/ability_bar/slot_occupied
    $checked !on:
      image-source: /images/ui/windows/ability_bar/slot_big_empty
    $checked on:
      image-source: /images/ui/windows/ability_bar/slot_big_occupied

  Panel
    id: overlayGlow
    size: 50 50
    image-size: 50 50
    anchors.top: parent.top
    anchors.horizontalCenter: parent.horizontalCenter
    image-source: /images/ui/bars/overlayani
    image-color: #e169f1
    visible: false

  Panel
    id: overlayQueued
    size: 50 50
    image-size: 50 50
    anchors.top: parent.top
    anchors.horizontalCenter: parent.horizontalCenter
    image-source: /images/ui/windows/ability_bar/overlay_queued
    image-color: #FFAA00
    visible: false

  UIWidget
    id: itemCount
    anchors.horizontalCenter: parent.horizontalCenter
    anchors.verticalCenter: parent.verticalCenter
    margin-top: 3
    font: poppins-semibold-bordered-12
    text-auto-resize: true
    phantom: true

  Panel
    id: labelBackground
    anchors.fill: next
    image-source: /images/ui/windows/ability_bar/skill_hotkey_backgorund
    image-border: 4

  AbilityBarSlotOverlayShortcut
    margin-bottom: 0

AbilityBar < UIWindow
  size: 350 70
  focusable: false

  EditModePanel
    &title: 'Action Bar'

  UIButton
    id: lockButton
    anchors.top: parent.top
    anchors.right: parent.right
    size: 20 20
    image-source: /images/ui/windows/ability_bar/icon_lock_off
    $on:
      image-source: /images/ui/windows/ability_bar/icon_lock_on
    @onClick: AbilityBar.onLock(self:getParent())

  UIButton
    id: rotateButton
    anchors.top: lockButton.bottom
    anchors.right: parent.right
    margin-top: 5
    size: 20 20
    image-source: /images/ui/windows/ability_bar/icon_arrow_off
    $on:
      image-source: /images/ui/windows/ability_bar/icon_arrow_on
    @onClick: AbilityBar.onRotate(self:getParent())

  Panel
    id: innerPanel
    anchors.fill: parent
    margin-left: 4

    Panel
      anchors.fill: parent

    AbilityBarSlot
      id: slot1
      anchors.left: parent.left
      anchors.top: parent.top
      margin-bottom: 1

    AbilityBarSlotOverlay
      id: slot1overlay

    AbilityBarSlot
      id: slot2
      anchors.left: prev.right
      anchors.top: prev.top
      margin-left: 4

    AbilityBarSlotOverlay
      id: slot2overlay

    AbilityBarSlot
      id: slot3
      anchors.left: prev.right
      anchors.top: prev.top
      margin-left: 4

    AbilityBarSlotOverlay
      id: slot3overlay

    AbilityBarSlot
      id: slot4
      anchors.left: prev.right
      anchors.top: prev.top
      margin-left: 4

    AbilityBarSlotOverlay
      id: slot4overlay

    AbilityBarSlot
      id: slot5
      anchors.left: prev.right
      anchors.top: prev.top
      margin-left: 4

    AbilityBarSlotOverlay
      id: slot5overlay

    AbilityBarSlot
      id: slot6
      anchors.left: prev.right
      anchors.top: prev.top
      margin-left: 4

    AbilityBarSlotOverlay
      id: slot6overlay

AbilityBarVertical < UIWindow
  size: 50 435
  focusable: false

  EditModePanelVertical
    &title: 'Action Bar'

  UIButton
    id: lockButton
    anchors.bottom: parent.bottom
    anchors.right: parent.right
    size: 20 20
    image-source: /images/ui/windows/ability_bar/icon_lock_off
    $on:
      image-source: /images/ui/windows/ability_bar/icon_lock_on
    @onClick: AbilityBar.onLock(self:getParent())

  UIButton
    id: rotateButton
    anchors.bottom: parent.bottom
    anchors.right: lockButton.left
    margin-right: 5
    size: 20 20
    image-source: /images/ui/windows/ability_bar/icon_arrow_off
    $on:
      image-source: /images/ui/windows/ability_bar/icon_arrow_on
    @onClick: AbilityBar.onRotate(self:getParent())

  Panel
    id: innerPanel
    anchors.fill: parent
    margin-top: 4

    Panel
      anchors.fill: parent

    AbilityBarSlotVertical
      id: slot1
      anchors.left: parent.left
      anchors.top: parent.top
      margin-bottom: 1

    AbilityBarSlotOverlayVertical
      id: slot1overlay

    AbilityBarSlotVertical
      id: slot2
      anchors.left: prev.left
      anchors.top: prev.bottom
      margin-top: 4

    AbilityBarSlotOverlayVertical
      id: slot2overlay

    AbilityBarSlotVertical
      id: slot3
      anchors.left: prev.left
      anchors.top: prev.bottom
      margin-top: 4

    AbilityBarSlotOverlayVertical
      id: slot3overlay

    AbilityBarSlotVertical
      id: slot4
      anchors.left: prev.left
      anchors.top: prev.bottom
      margin-top: 4

    AbilityBarSlotOverlayVertical
      id: slot4overlay

    AbilityBarSlotVertical
      id: slot5
      anchors.left: prev.left
      anchors.top: prev.bottom
      margin-top: 4

    AbilityBarSlotOverlayVertical
      id: slot5overlay

    AbilityBarSlotVertical
      id: slot6
      anchors.left: prev.left
      anchors.top: prev.bottom
      margin-top: 4

    AbilityBarSlotOverlayVertical
      id: slot6overlay

WeaponSkillBarSlotOverlay < Panel
  anchors.top: prev.top
  anchors.left: prev.left
  anchors.right: prev.right
  anchors.bottom: parent.bottom

  @update: |
    local marginTop = 0
    local size = {width = 68, height = 75}
    if self:isOn() and self:isChecked() then
      size = {width = 85, height = 82}
      marginTop = -6
    end

    self.border:setMarginTop(marginTop)
    self.border:setImageSize(size)
    self.border:setImageOffsetY(offsetY)
    self.border:setSize(size)

    self.border:setOn(self:isOn())
    self.border:setChecked(self:isChecked())

  @onStateChange: |
    self:update()
  @onCheckChange: |
    self:update()

  UIWidget
    id: border
    image-size: 68 75
    anchors.top: parent.top
    anchors.horizontalCenter: parent.horizontalCenter
    phantom: true
    $!on !checked:
      image-source: /images/ui/windows/ability_bar/slot_big_empty
    $on !checked:
      image-source: /images/ui/windows/ability_bar/slot_big_occupied
    $checked !on:
      image-source: /images/ui/windows/ability_bar/slot_big_empty
    $checked on:
      image-source: /images/ui/windows/ability_bar/slot_warforged_occupied

  Panel
    id: overlayGlow
    size: 68 75
    image-size: 68 75
    anchors.top: parent.top
    anchors.horizontalCenter: parent.horizontalCenter
    image-source: /images/ui/bars/overlayani
    image-color: #e169f1
    visible: false

  Panel
    id: overlayQueued
    size: 68 75
    image-size: 68 75
    anchors.top: parent.top
    anchors.horizontalCenter: parent.horizontalCenter
    image-source: /images/ui/windows/ability_bar/overlay_queued
    image-color: #FFAA00
    visible: false

  UIWidget
    id: itemCount
    anchors.horizontalCenter: parent.horizontalCenter
    anchors.verticalCenter: parent.verticalCenter
    margin-top: 3
    font: poppins-semibold-bordered-12
    text-auto-resize: true
    phantom: true

  Panel
    id: labelBackground
    anchors.fill: next
    image-source: /images/ui/windows/ability_bar/skill_hotkey_backgorund
    image-border: 4

  AbilityBarSlotOverlayShortcut
    margin-bottom: -3


WeaponSkillBar < UIWidget
  id: weaponSkillBar
  size: 68 80
  draggable: true
  &minHeight: 80

  EditModePanel
    &title: 'Weapon Skill'
  Panel
    id: innerPanel
    anchors.fill: parent

    WeaponSkillBarSlot
      id: slot1
      size: 64 64 
      image-size: 64 64
      anchors.centerIn: parent
      margin-top: 1
      margin-left: 1

    WeaponSkillBarSlotOverlay
      id: slot1overlay
      anchors.top: parent.top
      anchors.left: parent.left
      anchors.right: parent.right
      size: 68 75
      image-size: 68 75

MountSkillWidget < UIWidget
  id: mountSkillBar
  size: 61 63
  draggable: true

  EditModePanel
    &title: 'Moa Skill'
  Panel
    id: innerPanel
    anchors.fill: parent

    MountSkillBarSlot
      id: slot1
      anchors.horizontalCenter: parent.horizontalCenter
      anchors.top: parent.top

    AbilityBarSlotOverlay
      id: slot1overlay
      anchors.top: parent.top
      anchors.left: parent.left
      anchors.right: parent.right
      size: 47 47
      image-size: 47 47
      @onSetup: |
        self.border:setImageSize({width = 47, height = 47})
        self.border:setSize({width = 47, height = 47})
