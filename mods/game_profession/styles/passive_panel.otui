ProfessionPassive < UIWidget
  UIWidget
    id: image
    anchors.top: parent.top
    anchors.horizontalCenter: parent.horizontalCenter
    @onHoverChange: |
      if self:isHovered() then
        self:setOpacity(0.9)
        self:setImageColor('white')
        if self:getTooltip() then
          g_tooltip.display(self)
        end
        g_sound.onWidgetHover(self, true, true)
      else
        self:setOpacity(self:isOn() and 0.9 or 0.8)
        if not self:isOn() then
          self:setImageColor('gray')
        end
        g_tooltip.hide()
      end
    $on:
      image-color: white
      opacity: 0.9
    $!on:
      image-color: gray
    $pressed:
      opacity: 1.0
      image-color: white

  SpellLinkVertical
    id: link
    anchors.top: image.bottom
    anchors.horizontalCenter: parent.horizontalCenter
    height: 40

  UIWidget
    anchors.fill: next
    margin-left: -5
    margin-right: -5
    image-source: /images/ui/windows/professions/amount_background
    image-border: 2

  UIWidget
    id: text
    anchors.verticalCenter: image.bottom
    anchors.horizontalCenter: parent.horizontalCenter
    text: 0/2
    font: poppins-semibold-12
    text-offset: 0 2
    text-auto-resize: true
    margin-top: 1
    text-color: #c8ccd3

GameProfessionTree < Panel
  id: tree
  anchors.fill: parent

  UIWidget
    id: points_panel
    anchors.top: parent.top
    anchors.left: parent.left
    size: 200 50
    padding: 10 15 10 15
    UIWidget
      image-source: /images/ui/windows/professions/icon_passives
      size: 21 19
      image-size: 21 19
      anchors.verticalCenter: parent.verticalCenter
      anchors.left: parent.left
      text: Passive Skills
      font: poppins-semibold-13
      text-color: #c8ccd3
      text-auto-resize: true
      text-offset: 30 1
    UIWidget
      id: info
      image-source: /images/ui/windows/professions/icon_info
      size: 18 17
      anchors.left: prev.right
      anchors.verticalCenter: parent.verticalCenter
      margin-left: 10
      &tooltip: 'Acquire 1 passive point for every 3 levels in this profession.'  

  Panel
    id: experience
    anchors.top: points_panel.bottom
    width: 75
    anchors.left: parent.left
    margin-left: 25
    margin-top: 15
    layout:
      type: verticalBox
      fit-children: true
      spacing: 15
    @onSetup: |
      addEvent(function()
      local professionId = modules.game_professions.GameProfessions:getWidgetProfession(self)
      if not professionId then return end
      local professionName = ProfessionNames[professionId]:lower()
      self:setMarginRight((self:getWidth() * 3 + 35 * 3) / 2)
      for i = 1, 4 do
        local widget = g_ui.createWidget('ProfessionPassive', self)
        widget:setId(i)
        widget.image:setImageSource(string.format('/images/ui/windows/professions/tree/%s/%s/%i', professionName, (i%2 == 0 and 'medium' or 'small'), 1))
        widget:setSize({width=i%2 == 0 and 50 or 40, height=i%2 == 0 and 60 or 50})
        widget.image:setSize({width=i%2 == 0 and 50 or 40, height=i%2 == 0 and 50 or 40})
        widget.text:setText(string.format('0/%i', i % 2 == 0 and 1 or 2))
        local description = modules.game_professions.cfg.passiveDescription[professionName][self:getId()]
        widget.image:setTooltip(string.format(description.text, description.values[i%2 == 0 and 'medium' or 'small']))
        if i == 4 then
          widget.link:hide()
        end
        widget.image.onClick = function()
          modules.game_professions.GameProfessions:onPassiveNodeClicked(widget.image, professionId, 'experience', i)
        end
      end
      end)

  Panel
    id: speed
    anchors.top: experience.top
    width: 75
    anchors.left: experience.right
    layout:
      type: verticalBox
      fit-children: true
      spacing: 15
    @onSetup: |
      addEvent(function()
      local professionId = modules.game_professions.GameProfessions:getWidgetProfession(self)
      if not professionId then return end
      local professionName = ProfessionNames[professionId]:lower()
      for i = 1, 4 do
        local widget = g_ui.createWidget('ProfessionPassive', self)
        widget:setId(i)
        widget.image:setImageSource(string.format('/images/ui/windows/professions/tree/%s/%s/%i', professionName, (i%2 == 0 and 'medium' or 'small'), 2))
        widget:setSize({width=i%2 == 0 and 50 or 40, height=i%2 == 0 and 60 or 50})
        widget.image:setSize({width=i%2 == 0 and 50 or 40, height=i%2 == 0 and 50 or 40})
        widget.text:setText(string.format('0/%i', i % 2 == 0 and 1 or 2))
        local description = modules.game_professions.cfg.passiveDescription[professionName][self:getId()]
        widget.image:setTooltip(string.format(description.text, description.values[i%2 == 0 and 'medium' or 'small']))
        if i == 4 then
          widget.link:hide()
        end
        widget.image.onClick = function()
          modules.game_professions.GameProfessions:onPassiveNodeClicked(widget.image, professionId, 'speed', i)
        end
      end
      end)

  Panel
    id: resources
    anchors.top: experience.top
    width: 75
    anchors.left: speed.right
    layout:
      type: verticalBox
      fit-children: true
      spacing: 15
    @onSetup: |
      addEvent(function()
      local professionId = modules.game_professions.GameProfessions:getWidgetProfession(self)
      if not professionId then return end
      local professionName = ProfessionNames[professionId]:lower()
      for i = 1, 4 do
        local widget = g_ui.createWidget('ProfessionPassive', self)
        widget:setId(i)
        widget.image:setImageSource(string.format('/images/ui/windows/professions/tree/%s/%s/%i', professionName, (i%2 == 0 and 'medium' or 'small'), 3))
        widget:setSize({width=i%2 == 0 and 50 or 40, height=i%2 == 0 and 60 or 50})
        widget.image:setSize({width=i%2 == 0 and 50 or 40, height=i%2 == 0 and 50 or 40})
        widget.text:setText(string.format('0/%i', i % 2 == 0 and 1 or 2))
        local description = modules.game_professions.cfg.passiveDescription[professionName][self:getId()]
        widget.image:setTooltip(string.format(description.text, description.values[i%2 == 0 and 'medium' or 'small']))
        if i == 4 then
          widget.link:hide()
        end
        widget.image.onClick = function()
          modules.game_professions.GameProfessions:onPassiveNodeClicked(widget.image, professionId, 'resources', i)
        end
      end
      end)

  Panel
    id: rarity
    anchors.top: experience.top
    width: 75
    anchors.left: resources.right
    layout:
      type: verticalBox
      fit-children: true
      spacing: 15
    @onSetup: |
      addEvent(function()
      local professionId = modules.game_professions.GameProfessions:getWidgetProfession(self)
      if not professionId then return end
      local professionName = ProfessionNames[professionId]:lower()
      for i = 1, 4 do
        local widget = g_ui.createWidget('ProfessionPassive', self)
        widget:setId(i)
        widget.image:setImageSource(string.format('/images/ui/windows/professions/tree/%s/%s/%i', professionName, (i%2 == 0 and 'medium' or 'small'), 4))
        widget:setSize({width=i%2 == 0 and 50 or 40, height=i%2 == 0 and 60 or 50})
        widget.image:setSize({width=i%2 == 0 and 50 or 40, height=i%2 == 0 and 50 or 40})
        widget.text:setText(string.format('0/%i', i % 2 == 0 and 1 or 2))
        local description = modules.game_professions.cfg.passiveDescription[professionName][self:getId()]
        widget.image:setTooltip(string.format(description.text, description.values[i%2 == 0 and 'medium' or 'small']))
        if i == 4 then
          widget.link:hide()
        end
        widget.image.onClick = function()
          modules.game_professions.GameProfessions:onPassiveNodeClicked(widget.image, professionId, 'rarity', i)
        end
      end
      end)

  Panel
    id: unique
    anchors.top: experience.bottom
    height: 100
    anchors.left: experience.left
    anchors.horizontalCenter: parent.horizontalCenter
    margin-top: 25
    layout:
      type: horizontalBox
      spacing: 75
      fit-children: true
    @onSetup: |
      addEvent(function()
      local professionId = modules.game_professions.GameProfessions:getWidgetProfession(self)
      if not professionId then return end
      local professionName = ProfessionNames[professionId]:lower()
      for i = 1, 2 do
        local widget = g_ui.createWidget('ProfessionPassive', self)
        widget:setId(i)
        widget.image:setImageSource(string.format('/images/ui/windows/professions/tree/%s/%s/%i', professionName, 'big', i))
        widget:setSize({width=75, height=100})
        widget.image:setSize({width=75, height=75})
        widget.link:hide()
        widget.text:setText('0/1')
        widget.image:setTooltip(modules.game_professions.cfg.passiveDescription[professionName][self:getId()][i])
        widget.image.tooltipAlign = AlignLeftCenter
        local level
        if table.find({'blacksmithing', 'carpentry', 'weaving', 'cooking', 'breeding', 'alchemy'}, professionName) then
          level = i == 1 and 50 or 25
        end
        widget.image.onClick = function()
          modules.game_professions.GameProfessions:onPassiveNodeClicked(widget.image, professionId, 'unique', i, level)
        end
        if level then
          widget.level = level
          widget.image:setText(level)
          widget.image:setFont('myriad-pro-semibold-36')
          widget.image:setTextOffset({x=0,y=12})
        end
      end
      end)

  Panel
    id: specialization
    anchors.top: unique.bottom
    height: 100
    anchors.left: unique.left
    anchors.horizontalCenter: parent.horizontalCenter
    margin-top: 10
    layout:
      type: horizontalBox
      spacing: 25
      fit-children: true
    @onSetup: |
      addEvent(function()
        local professionId = modules.game_professions.GameProfessions:getWidgetProfession(self)
        if not professionId then return end
        local professionName = ProfessionNames[professionId]:lower()
        for i = 1, 3 do
          if not table.find({'blacksmithing', 'carpentry', 'weaving', 'cooking', 'alchemy'}, professionName) then
            self:destroy()
            return
          end
          local level = 70
          local widget = g_ui.createWidget('ProfessionPassive', self)
          widget:setId(i)
          widget.image:setImageSource(string.format('/images/ui/windows/professions/tree/%s/%s/%i', professionName, 'specialization', i))
          widget:setSize({width=50, height=75})
          widget.image:setSize({width=50, height=50})
          widget.link:hide()
          widget.text:setText('0/1')
          widget.image:setTooltip(cfg.modules.game_professions.cfg.passiveDescription[professionName][self:getId()][i])
          widget.image.tooltipAlign = AlignLeftCenter
          widget.image.onClick = function()
            modules.game_professions.GameProfessions:onPassiveNodeClicked(widget.image, professionId, 'specialization', i, level)
          end
          widget.level = level
          widget.image:setText(level)
          widget.image:setFont('myriad-pro-semibold-30')
          widget.image:setTextOffset({x=0,y=10})
        end
      end)

  UIWidget
    id: points
    anchors.bottom: parent.bottom
    anchors.horizontalCenter: parent.horizontalCenter
    margin-bottom: 83
    font: poppins-semibold-13
    text-auto-resize: true
    padding: 8 15 8 15
    text-color: #c8ccd3
    image-border: 5
    image-source: /images/ui/windows/professions/points_background
    $on:
      image-source: /images/ui/windows/professions/points_background_active
      text-color: #6fc45d
    @onTextChange: |
      self.passivePoints = tonumber(self:getText()) or -1
      self:setOn(self:getText() ~= '0')
      self:setText(string.format('%s: %s', tr('Points Available'), self:getText()), true)   

  UIWidget
    id: reset_points_panel
    anchors.bottom: parent.bottom
    anchors.left: parent.left
    anchors.right: parent.right
    height: 70
    background-color: #00000040
    UIWidget
      id: resetPointsLabel
      text: Reset Points
      anchors.top: parent.top
      anchors.bottom: parent.bottom
      anchors.left: parent.left
      margin-left: 78
      text-auto-resize: true
      font: poppins-14

    YellowButton
      id: reset_points_button
      anchors.top: parent.top
      margin-top: 8
      anchors.left: resetPointsLabel.right
      margin-left: 14
      text: 600
      @onSetup: |
        self.icon:setChecked(true)
        self:onStyleApply(self:getStyleName(), {
            ['&iconPath'] = '/images/ui/windows/premium_store/icon_purchase_dawn_essence',
            ['&iconAlign'] = 'left',
            ['&iconOffset'] = '20 0',
            ['&textMarginLeft'] = '45',
            ['&textAlign'] = 'left',
        })
      @onClick: |
        local professionId = modules.game_professions.GameProfessions:getWidgetProfession(self)
        if not professionId then
          return
        end
        modules.game_professions.GameProfessions:onResetPointsClicked(professionId)
